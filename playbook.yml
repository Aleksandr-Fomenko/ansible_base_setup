- name: Roles config
  hosts: test
  become: true
  gather_facts: true
  roles: 
    - base_setup
  vars_files:
    - vars.yml
  # tasks:

  # - name: Check OS
  #   assert:
  #     that:
  #       - ( ansible_distribution == "RedHat" and ( ansible_distribution_major_version > '7' )
  #         ) or
  #         ( ansible_distribution == "CentOS" and ( ansible_distribution_major_version > '7' )
  #         )
  #     fail_msg: "Verification OS was unsuccessful"
  #     success_msg: "Verification OS was unsuccessful"
  
  # - name: Hostname configuration
  #   block:

  #   - name: Set hostname
  #     hostname:
  #       name: "{{ inventory_hostname }}"
  #       use: "systemd"
    
  #   - name: Get attribute /etc/hosts
  #     stat:
  #       path: /etc/hosts
  #     register: get_stat

  #   - name: Chattr -i /etc/hosts
  #     file:
  #       path: /etc/hosts
  #       attributes: '-i'
  #     changed_when: False
  #     when: '"immutable" in get_stat.stat.attributes'
    
  #   - name: Update /etc/hosts
  #     blockinfile:
  #         path: /etc/hosts
  #         create: yes
  #         block: |
  #           127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
  #           ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
  #           {{ ansible_ssh_host }} {{ inventory_hostname }}

  #   - name: Chattr +i /etc/hosts
  #     file:
  #       path: /etc/hosts
  #       attributes: '+i'
  #     changed_when: False
    
  #   when: ansible_facts.virtualization_type != "docker"

  # - name: Change motd
  #   copy: 
  #     src: dynomotd.sh
  #     dest: /etc/profile.d/dynomotd.sh
  #     owner: root
  #     group: root
  #     mode: '0644'
  #     backup: no
  
  # - name: Check /etc/NetworkManager/NetworkManager.conf exists
  #   stat:
  #     path: /etc/NetworkManager/NetworkManager.conf
  #   register: stat_result
  
  # - name: Make sure line 'dns=none' is set in /etc/NetworkManager/NetworkManager.conf
  #   ini_file:
  #     path: /etc/NetworkManager/NetworkManager.conf
  #     state: present
  #     no_extra_spaces: yes
  #     section: main
  #     option: dns
  #     value: none
  #     owner: root
  #     group: root
  #     mode: 0644
  #     backup: yes
  #   when: stat_result.stat.exists
  #   # notify:
  #   #   - reload NetworkManager

  # - name: deploy resolv.conf template
  #   template:
  #     src: templates/resolv.conf.j2
  #     dest: /etc/resolv.conf
  #     owner: root
  #     group: root
  #     mode: 0644
  #     backup: yes
  
  # - name: Check ipa-client host
  #   ipa_host:
  #     name: "{{ inventory_hostname }}"
  #     state: present
  #     ipa_host: "{{ freeipa_master_host }}.{{ freeipa_domain }}"
  #     ipa_user: "{{ freeipa_admin_user }}"
  #     ipa_pass: "{{ freeipa_admin_pass }}"
  #     validate_certs: no
  #   check_mode: yes
  #   register: host_exists

  # - name: Setup ipa-client
  #   shell: >
  #     /usr/sbin/ipa-client-install -d --mkhomedir --unattended
  #     --domain {{ freeipa_domain }}
  #     --hostname {{ inventory_hostname }}
  #     --principal {{ freeipa_admin_user }}
  #     --password "{{ freeipa_admin_pass }}"
  #     --realm {{ freeipa_domain | upper }}
  #     --server {{ freeipa_master_host }}.{{ freeipa_domain }}
  #   when: host_exists.changed
  #   notify:
  #     - restart sssd 

  # # - name: Update {{ ansible_distribution }} hosts
  # #   yum:
  # #     update_cache: true
  # #     update_only: true
  # #   when: ansible_distribution in ["CentOS"]
  
  # # - name: Install packages
  # #   package:
  # #     name: "{{ item }}"
  # #   with_items: "{{ packages[ansible_distribution][ansible_distribution_major_version] }}"